name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        BUILD_TYPE: ["Debug", "Release"]
        os: [ windows-latest ]
        BOOST_VERSION: [ 1.79.0 ]
    steps:
    - uses: actions/checkout@v2

    # - name: Install and netsh cert
    #   run: Powershell.exe -File .\scripts\new_cert.ps1
    - name: Convert, install and netsh cert
      run: Powershell.exe -File .\scripts\add_cert.ps1

    - name: Get MSVC
      uses: ilammy/msvc-dev-cmd@v1

    - name: Get specific version CMake, v3.22.2 
      uses: lukka/get-cmake@v3.22.2
    
    - name: Get Boost
      uses: MarkusJx/install-boost@v2.3.0
      id: install-boost
      with:
        # REQUIRED: Specify the required boost version
        # A list of supported versions can be found here: 
        # https://github.com/MarkusJx/prebuilt-boost/blob/main/versions-manifest.json
        boost_version: ${{ matrix.BOOST_VERSION }}
        toolset: msvc
        platform_version: 2022
        link: static

    - name: run cmake
      env:
        BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
      run: > 
        cmake . -DCMAKE_BUILD_TYPE=${{ matrix.BUILD_TYPE }} -B build
    - name: run build
      run: cmake --build build --config ${{ matrix.BUILD_TYPE }}
    
    # - name: run test
    #   run: ctest -C ${{ matrix.BUILD_TYPE }} --test-dir build --verbose --repeat until-pass:3 --timeout 200

    - name: run bench
      run: Powershell.exe -File .\scripts\all_scenarios_launcher.ps1 -Mode ${{ matrix.BUILD_TYPE }} -Loop 10 

    - name: output summary
      run: Powershell.exe -File .\scripts\print_summary.ps1